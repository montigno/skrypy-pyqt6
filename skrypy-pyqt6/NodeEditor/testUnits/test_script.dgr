[diagram]
link=[N2] node=[U0:arrayFloat#Node#S0:azert]
link=[N11] node=[A2:#Node#U0:arrayFloat]
link=[N10] node=[A1:#Node#U0:listFloat]
link=[N9] node=[A0:#Node#U0:inInt]
link=[N8] node=[U1:arrayInt#Node#P2:Value]
link=[N7] node=[U1:listInt#Node#P1:Value]
link=[N6] node=[U1:outInt#Node#P0:Value]
link=[N4] node=[S0:azer#Node#U1:listInt]
link=[N0] node=[U0:outInt#Node#S0:aze]
link=[N3] node=[S0:aze#Node#U1:inInt]
link=[N5] node=[S0:azert#Node#U1:arrayInt]
link=[N1] node=[U0:listFloat#Node#S0:azer]
cluster=[A2] value=[(-100.0, [[-1.0, 1.0], [-2.0, 2.0]], 100.0)] format=[array_float] label=[arrayFloat] RectF=[(-818.75, 198.56, 219.0, 61.0)] 
cluster=[A1] value=[(-100.0, [1.08, -2.12, 7.58], 100.0)] format=[list_float] label=[listFloat] RectF=[(-886.89, 115.73, 321.0, 33.0)] 
constant=[A0] value=[(-100000, -2, 100000)] format=[int] label=[inInt] RectF=[(-646.9, 0.6900000000000001, 97.0, 29.0)] 
probe=[P2] label=[Value] format=[array_int] RectF=[(862.0600000000001, 187.82, 70, 24)] 
probe=[P1] label=[Value] format=[list_int] RectF=[(862.0600000000001, 92.56, 70, 24)] 
probe=[P0] label=[Value] format=[int] RectF=[(862.0600000000001, -2.71, 70, 24)] 
block=[U0] category=[Demos.Models] class=[AllTypes] valInputs=[(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['Node(N9)', 0.0, '', True, 'path', [0], 'Node(N10)', [''], [False], ['path'], [[0]], 'Node(N11)', [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])] RectF=[(-377.77, -22.45, 197.62, 362.01)] 
script=[S0] title=[Script_python] inputs=[['aze', 'in', 'int'], ['azer', 'in', 'list_float'], ['azert', 'in', 'array_float']] outputs=[['aze', 'out', 'int'], ['azer', 'out', 'int'], ['azert', 'out', 'int']] code=[your code] RectF=[(-57.78, -20.830000000000002, 400.0, 400.0)]
block=[U1] category=[Demos.Models] class=[AllTypes] valInputs=[(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['Node(N3)', 0.0, '', True, 'path', 'Node(N4)', [0.0], [''], [False], ['path'], 'Node(N5)', [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])] RectF=[(515.44, 20.27, 197.62, 362.01)] 
[source S0]
['azer=U0:listFloat', 'aze=U0:outInt', 'azert=U0:arrayFloat']
aze += 1
['S0:aze', 'S0:azer', 'S0:azert']
[/source S0]

[execution]
[]
['U0', 'S0', 'U1', 'P0', 'P1', 'P2']
{'U0': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [-2, 0.0, '', True, 'path', [0], [1.08, -2.12, 7.58], [''], [False], ['path'], [[0]], [[-1.0, 1.0], [-2.0, 2.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])"), 'U1': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['S0:aze', 0.0, '', True, 'path', 'S0:azer', [0.0], [''], [False], ['path'], 'S0:azert', [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])"), 'P0': ('int', 'Value', 'U1:outInt'), 'P1': ('list_int', 'Value', 'U1:listInt'), 'P2': ('array_int', 'Value', 'U1:arrayInt')}
['U0:arrayFloat', 'U1:arrayInt', 'U1:listInt', 'U1:outInt', 'S0:azer', 'U0:outInt', 'S0:aze', 'S0:azert', 'U0:listFloat']
{}
[]
[interlinks]
[]
