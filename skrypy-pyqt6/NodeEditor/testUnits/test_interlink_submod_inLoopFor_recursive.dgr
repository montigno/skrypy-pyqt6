[diagram]
submod=[M0] nameMod=[test_submod] catMod=[Test_skrypy] valInputs=[(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['Node(N3)', 'Node(N2)', 'Node(N1)', True, 'path', [0], [0.0], [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])] RectF=[(0.0, 100.0, 200.0, 400.0)] 
probe=[P0] label=[Value] format=[int] RectF=[(300.0, 100.0, 70, 24)] 
probe=[P1] label=[Value] format=[str] RectF=[(300.0, 300.0, 70, 24)] 
link=[N0] node=[M0:outInt#Node#P0:Value]
link=[N1] node=[F2:in0#Node#M0:inString]
link=[N2] node=[F1:in0#Node#M0:inFloat]
link=[N3] node=[F0:in0#Node#M0:inInt]
link=[N4] node=[M0:outFloat#Node#F2:out0]
link=[N5] node=[F2:out0#Node#M1:listFloat]
link=[N6] node=[M0:outString#Node#P1:Value]
link=[N7] node=[M1:listFloat#Node#P2:Value]
link=[N8] node=[A0:#Node#F0:in0]
link=[N9] node=[A2:#Node#F2:in0]
link=[N10] node=[U0:outListFloat#Node#F1:in0]
link=[N11] node=[A1:#Node#U0:listFloat]
loopFor=[F2] inputs=[[[['in0', 'in', 'list_str'], ['in0', 'out', 'str']]]] outputs=[[[['out0', 'in', 'float'], ['out0', 'out', 'list_float']]]] listItems=[['M0', 'P0', 'P1']] RectF=[(-50.0, 50.0, 456.38593033014683, 481.15430128635705)] 
submod=[M1] nameMod=[test_submod] catMod=[Test_skrypy] valInputs=[(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [0, 0.0, '', True, 'path', [0], 'Node(N5)', [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])] RectF=[(500.0, 150.0, 200.0, 375.0)] 
probe=[P2] label=[Value] format=[list_float] RectF=[(750.0, 300.0, 70, 24)] 
cluster=[A0] value=[(-100, [3, -3], 100)] format=[list_int] label=[in0] RectF=[(-550.0, 100.0, 219.0, 33.0)] 
cluster=[A1] value=[(-100.0, [-3.0, 2.0], 100.0)] format=[list_float] label=[in0] RectF=[(-1000.0, 300.0, 219.0, 33.0)] 
cluster=[A2] value=[['He', 'Wo']] format=[list_str] label=[in0] RectF=[(-600.0, 500.0, 219.0, 33.0)] 
loopFor=[F1] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[]] listItems=[['P2', 'M1', 'F2']] RectF=[(-150.0, -50.0, 1005.104963837945, 659.300633576247)] 
loopFor=[F0] inputs=[[[['in0', 'in', 'list_int'], ['in0', 'out', 'int']]]] outputs=[[]] listItems=[['F1']] RectF=[(-250.0, -150.0, 1172.2776825519227, 805.4282559189325)] 
block=[U0] category=[Tools.Follower] class=[follow_float_list] valInputs=[(['listFloat'], ['Node(N11)'], ['outListFloat'], ['list_float'])] RectF=[(-600.0, 300.0, 200.0, 100.0)] 
[execution]
[]
['U0', 'F0']
{'U0': ('Tools.Follower', 'follow_float_list', "(['listFloat'], [[-3.0, 2.0]], ['outListFloat'], ['list_float'])")}
['U0:outListFloat']
{}
[]
[loopfor F0]
['F0:in0=[3, -3]']
['F1']
{}
[]
{}
[]
[loopfor F1]
['F1:in0=U0:outListFloat']
['F2', 'M1', 'P2']
{'P2': ('list_float', 'Value', 'M1:listFloat')}
['F2:out0', 'M1:listFloat']
{'M1': ('test_submod', 'Test_skrypy', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], [0, 0.0, '', True, 'path', [0], 'F2:out0', [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])")}
[]
[loopfor F2]
["F2:in0=['He', 'Wo']"]
['M0', 'ThreadOn', 'P0', 'P1', 'ThreadOff']
{'P0': ('int', 'Value', 'M0:outInt'), 'P1': ('str', 'Value', 'M0:outString')}
['M0:outInt', 'F2:in0', 'F1:in0', 'F0:in0', 'M0:outFloat', 'M0:outString']
{'M0': ('test_submod', 'Test_skrypy', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['F0:in0', 'F1:in0', 'F2:in0', True, 'path', [0], [0.0], [''], [False], ['path'], [[0]], [[0.0]], [['']], [[False]], [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])")}
['F2:out0=M0:outFloat']
[submod M0]
['C0:inInt=F0:in0', 'C1:inFloat=F1:in0', 'C2:inString=F2:in0', 'C3:inBool=True', 'C4:inPath=path', 'C5:listInt=[0]', 'C6:listFloat=[0.0]', "C7:listString=['']", 'C8:listBool=[False]', "C9:listPath=['path']", 'C10:arrayInt=[[0]]', 'C11:arrayFloat=[[0.0]]', "C12:arrayString=[['']]", 'C13:arrayBool=[[False]]', "C14:arrayPath=[['path']]", 'C15:inDict={}', "C16:inTuple=('',)", 'C17:inTuple2=(32,)']
['U0', 'U1']
{'U0': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['C0:inInt', 'C1:inFloat', 'C2:inString', 'C3:inBool', 'C4:inPath', 'C5:listInt', 'C6:listFloat', 'C7:listString', 'C8:listBool', 'C9:listPath', 'C10:arrayInt', 'C11:arrayFloat', 'C12:arrayString', 'C13:arrayBool', 'C14:arrayPath', 'C15:inDict', 'C16:inTuple', 'C17:inTuple2'], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])"), 'U1': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['U0:outInt', 'U0:outFloat', 'U0:outString', True, 'path', 'U0:listInt', 'U0:listFloat', [''], [False], 'U0:listPath', [[0]], [[0.0]], [['']], 'U0:arrayBool', [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])")}
['U1:tuple2', 'U1:tuple', 'U1:dictionary', 'U1:arrayPath', 'U1:arrayBool', 'U1:arrayString', 'U1:arrayFloat', 'U1:arrayInt', 'U1:listPath', 'U1:listBool', 'U1:listString', 'U1:listFloat', 'U1:listInt', 'U1:outPath', 'U1:outBool', 'U1:outString', 'U1:outFloat', 'U1:outInt', 'U0:arrayBool', 'U0:listPath', 'U0:listFloat', 'U0:listInt', 'U0:outString', 'U0:outFloat', 'U0:outInt']
{}
['M0:outInt=U1:outInt', 'M0:outFloat=U1:outFloat', 'M0:outString=U1:outString', 'M0:outBool=U1:outBool', 'M0:outPath=U1:outPath', 'M0:listInt=U1:listInt', 'M0:listFloat=U1:listFloat', 'M0:listString=U1:listString', 'M0:listBool=U1:listBool', 'M0:listPath=U1:listPath', 'M0:arrayInt=U1:arrayInt', 'M0:arrayFloat=U1:arrayFloat', 'M0:arrayString=U1:arrayString', 'M0:arrayBool=U1:arrayBool', 'M0:arrayPath=U1:arrayPath', 'M0:dictionary=U1:dictionary', 'M0:tuple=U1:tuple', 'M0:tuple2=U1:tuple2']
[submod M1]
['C0:inInt=0', 'C1:inFloat=0.0', 'C2:inString=', 'C3:inBool=True', 'C4:inPath=path', 'C5:listInt=[0]', 'C6:listFloat=F2:out0', "C7:listString=['']", 'C8:listBool=[False]', "C9:listPath=['path']", 'C10:arrayInt=[[0]]', 'C11:arrayFloat=[[0.0]]', "C12:arrayString=[['']]", 'C13:arrayBool=[[False]]', "C14:arrayPath=[['path']]", 'C15:inDict={}', "C16:inTuple=('',)", 'C17:inTuple2=(32,)']
['U0', 'U1']
{'U0': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['C0:inInt', 'C1:inFloat', 'C2:inString', 'C3:inBool', 'C4:inPath', 'C5:listInt', 'C6:listFloat', 'C7:listString', 'C8:listBool', 'C9:listPath', 'C10:arrayInt', 'C11:arrayFloat', 'C12:arrayString', 'C13:arrayBool', 'C14:arrayPath', 'C15:inDict', 'C16:inTuple', 'C17:inTuple2'], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])"), 'U1': ('Demos.Models', 'AllTypes', "(['inInt', 'inFloat', 'inString', 'inBool', 'inPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'inDict', 'inTuple', 'inTuple2'], ['U0:outInt', 'U0:outFloat', 'U0:outString', True, 'path', 'U0:listInt', 'U0:listFloat', [''], [False], 'U0:listPath', [[0]], [[0.0]], [['']], 'U0:arrayBool', [['path']], {}, ('',), (32,)], ['outInt', 'outFloat', 'outString', 'outBool', 'outPath', 'listInt', 'listFloat', 'listString', 'listBool', 'listPath', 'arrayInt', 'arrayFloat', 'arrayString', 'arrayBool', 'arrayPath', 'dictionary', 'tuple', 'tuple2'], ['int', 'float', 'str', 'bool', 'path', 'list_int', 'list_float', 'list_str', 'list_bool', 'list_path', 'array_int', 'array_float', 'array_str', 'array_bool', 'array_path', 'dict', 'tuple_str', 'tuple_int'])")}
['U1:tuple2', 'U1:tuple', 'U1:dictionary', 'U1:arrayPath', 'U1:arrayBool', 'U1:arrayString', 'U1:arrayFloat', 'U1:arrayInt', 'U1:listPath', 'U1:listBool', 'U1:listString', 'U1:listFloat', 'U1:listInt', 'U1:outPath', 'U1:outBool', 'U1:outString', 'U1:outFloat', 'U1:outInt', 'U0:arrayBool', 'U0:listPath', 'U0:listFloat', 'U0:listInt', 'U0:outString', 'U0:outFloat', 'U0:outInt']
{}
['M1:outInt=U1:outInt', 'M1:outFloat=U1:outFloat', 'M1:outString=U1:outString', 'M1:outBool=U1:outBool', 'M1:outPath=U1:outPath', 'M1:listInt=U1:listInt', 'M1:listFloat=U1:listFloat', 'M1:listString=U1:listString', 'M1:listBool=U1:listBool', 'M1:listPath=U1:listPath', 'M1:arrayInt=U1:arrayInt', 'M1:arrayFloat=U1:arrayFloat', 'M1:arrayString=U1:arrayString', 'M1:arrayBool=U1:arrayBool', 'M1:arrayPath=U1:arrayPath', 'M1:dictionary=U1:dictionary', 'M1:tuple=U1:tuple', 'M1:tuple2=U1:tuple2']
[interlinks]
['F1:in0', 'F0:in0', 'U0:outListFloat', 'M0:outFloat']
