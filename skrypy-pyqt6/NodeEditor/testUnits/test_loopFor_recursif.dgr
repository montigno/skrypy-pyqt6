[diagram]
link=[N6] node=[F2:in0#Node#F1:in0]
link=[N5] node=[F2:in0#Node#U2:list_float_in]
link=[N4] node=[F2:in0#Node#F0:in0]
link=[N3] node=[A0:#Node#U3:column]
link=[N2] node=[U2:array#Node#U3:array_float_in]
link=[N0] node=[F0:in0#Node#U0:x]
link=[N1] node=[F1:in0#Node#U1:x]
link=[N7] node=[U0:out#Node#F0:out0]
link=[N8] node=[U1:out#Node#F1:out0]
link=[N9] node=[F0:out0#Node#F2:out0]
link=[N10] node=[U3:outColumn#Node#F2:out1]
link=[N11] node=[F1:out0#Node#F2:out2]
link=[N12] node=[F2:out0#Node#P0:Value]
link=[N13] node=[F2:out2#Node#P1:Value]
link=[N14] node=[F2:out1#Node#U4:inFloat]
link=[N15] node=[U5:rand_out#Node#F2:in0]
link=[N16] node=[A1:#Node#U0:y]
link=[N17] node=[A1:#Node#U1:y]
link=[N18] node=[A2:#Node#U5:row]
link=[N19] node=[A3:#Node#U5:col]
link=[N20] node=[A4:#Node#U5:slice]
link=[N21] node=[A5:#Node#U2:list_float_in_0]
block=[U0] category=[Tools.Boolean_operations] class=[x_Not_Equal_y] valInputs=[(['x', 'y'], ['Node(N0)', 'Node(N16)'], ['out'], ['bool'])] RectF=[(-737.79, -116.14, 150.0, 80.0)] 
block=[U1] category=[Tools.Boolean_operations] class=[x_Equal_y] valInputs=[(['x', 'y'], ['Node(N1)', 'Node(N17)'], ['out'], ['bool'])] RectF=[(-763.67, 443.3, 150.0, 80.0)] 
probe=[P0] label=[Value] format=[array_bool] RectF=[(-98.44, -27.91, 70, 24)] 
probe=[P1] label=[Value] format=[array_bool] RectF=[(-98.44, 411.64, 70, 24)] 
constant=[A1] value=[(-100000.0, 0.0, 100000.0)] format=[float] label=[A1] RectF=[(-1562.2, 18.44, 131.0, 31.0)] 
constant=[A2] value=[(-100000, 5, 100000)] format=[int] label=[row] RectF=[(-1641.88, 113.07000000000001, 87.0, 31.0)] 
constant=[A3] value=[(-100000, 5, 100000)] format=[int] label=[col] RectF=[(-1638.1100000000001, 188.86, 87.0, 31.0)] 
constant=[A4] value=[(-100000, 5, 100000)] format=[int] label=[slice] RectF=[(-1635.49, 261.14, 87.0, 31.0)] 
constant=[A0] value=[(-100000, 1, 100000)] format=[int] label=[column] RectF=[(-706.6800000000001, 256.85, 87.0, 31.0)] 
block=[U3] category=[Tools.Float_array] class=[float_array_getColumn] valInputs=[(['array_float_in', 'column'], ['Node(N2)', 'Node(N3)'], ['outColumn'], ['list_float'])] RectF=[(-550.9300000000001, 167.45000000000002, 211.86, 80.0)] 
block=[U2] category=[Tools.Float_list] class=[float_list_to_array_dyn] valInputs=[(['list_float_in', 'list_float_in_0'], ['Node(N5)', 'Node(N21)'], ['array'], ['array_float'])] RectF=[(-871.41, 149.78, 170.98, 80.0)] 
loopFor=[F0] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[[['out0', 'in', 'bool'], ['out0', 'out', 'list_bool']]]] listItems=[['U0']] RectF=[(-878.15, -189.96, 440.0, 227.0)] 
loopFor=[F1] inputs=[[[['in0', 'in', 'list_float'], ['in0', 'out', 'float']]]] outputs=[[[['out0', 'in', 'bool'], ['out0', 'out', 'list_bool']]]] listItems=[['U1']] RectF=[(-890.95, 345.82, 407.77937914998745, 230.62011903262976)] 
cluster=[A5] value=[(-100.0, [1.0, 0.0], 100.0)] format=[list_float] label=[list_float_in_0] RectF=[(-1237.5, 469.45, 219.0, 33.0)] 
loopFor=[F2] inputs=[[[['in0', 'in', 'array_float'], ['in0', 'out', 'list_float']]]] outputs=[[[['out0', 'in', 'list_bool'], ['out0', 'out', 'array_bool']], [['out1', 'in', 'list_float'], ['out1', 'out', 'array_float']], [['out2', 'in', 'list_bool'], ['out2', 'out', 'array_bool']]]] listItems=[['A5', 'A0', 'F1', 'U3', 'U2', 'F0']] RectF=[(-1251.2, -232.64000000000001, 1051.6134148953497, 875.7367313843533)] 
block=[U4] category=[Tools.Print] class=[Print_float] valInputs=[(['comment', 'inFloat'], ['', 'Node(N14)'], [], [])] RectF=[(-64.91, 154.15, 150.0, 80.0)] 
block=[U5] category=[Signals.Generator] class=[gen_random_float_3D] valInputs=[(['row', 'col', 'slice'], ['Node(N18)', 'Node(N19)', 'Node(N20)'], ['rand_out'], ['array_float'])] RectF=[(-1476.71, 165.94, 150.0, 80.0)] 
[execution]
[]
['U5', 'F2', 'P0', 'P1', 'U4']
{'U5': ('Signals.Generator', 'gen_random_float_3D', "(['row', 'col', 'slice'], [5, 5, 5], ['rand_out'], ['array_float'])"), 'P0': ('array_bool', 'Value', 'F2:out0'), 'P1': ('array_bool', 'Value', 'F2:out2'), 'U4': ('Tools.Print', 'Print_float', "(['comment', 'inFloat'], ['', 'F2:out1'], [], [])")}
['F2:out0', 'F2:out2', 'F2:out1', 'U5:rand_out']
{}
[]
[loopfor F2]
['F2:in0=U5:rand_out']
['ThreadOn', 'F0', 'F1', 'U2', 'ThreadOff', 'U3']
{'U2': ('Tools.Float_list', 'float_list_to_array_dyn', "(['list_float_in', 'list_float_in_0'], ['F2:in0', [1.0, 0.0]], ['array'], ['array_float'])"), 'U3': ('Tools.Float_array', 'float_array_getColumn', "(['array_float_in', 'column'], ['U2:array', 1], ['outColumn'], ['list_float'])")}
['F2:in0', 'F2:in0', 'F2:in0', 'U2:array', 'F0:out0', 'U3:outColumn', 'F1:out0']
{}
['F2:out0=F0:out0', 'F2:out1=U3:outColumn', 'F2:out2=F1:out0']
[loopfor F0]
['F0:in0=F2:in0']
['U0']
{'U0': ('Tools.Boolean_operations', 'x_Not_Equal_y', "(['x', 'y'], ['F0:in0', 0.0], ['out'], ['bool'])")}
['F0:in0', 'U0:out']
{}
['F0:out0=U0:out']
[loopfor F1]
['F1:in0=F2:in0']
['U1']
{'U1': ('Tools.Boolean_operations', 'x_Equal_y', "(['x', 'y'], ['F1:in0', 0.0], ['out'], ['bool'])")}
['F1:in0', 'U1:out']
{}
['F1:out0=U1:out']
[interlinks]
['U0:out', 'U1:out']
