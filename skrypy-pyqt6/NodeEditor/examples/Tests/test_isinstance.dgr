[diagram]
link=[N25] node=[A15:#Node#U8:type_compare]
link=[N22] node=[A14:#Node#U7:value]
link=[N21] node=[A13:#Node#U7:key]
link=[N19] node=[A12:#Node#U6:type_compare]
link=[N18] node=[U6:out#Node#P6:Value]
link=[N17] node=[A11:#Node#U5:type_compare]
link=[N16] node=[U5:out#Node#P5:Value]
link=[N11] node=[A7:#Node#U2:var]
link=[N7] node=[A5:#Node#U1:var]
link=[N4] node=[U1:out#Node#P1:Value]
link=[N3] node=[A1:#Node#U1:type_compare]
link=[N0] node=[A2:#Node#U0:var]
link=[N2] node=[U0:out#Node#P0:Value]
link=[N1] node=[A0:#Node#U0:type_compare]
link=[N5] node=[U2:out#Node#P3:Value]
link=[N6] node=[A3:#Node#U2:type_compare]
link=[N8] node=[U3:out#Node#P2:Value]
link=[N9] node=[A4:#Node#U3:type_compare]
link=[N10] node=[A6:#Node#U3:var]
link=[N12] node=[A9:#Node#U4:var]
link=[N13] node=[U4:out#Node#P4:Value]
link=[N14] node=[A8:#Node#U4:type_compare]
link=[N15] node=[A10:#Node#U5:var]
link=[N20] node=[U7:out_dict#Node#U6:var]
link=[N23] node=[U8:out#Node#P7:Value]
link=[N24] node=[S0:out_set#Node#U8:var]
constant=[A15] value=['set'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple', 'set'))] label=[type_compare] RectF=[(120.91, 498.41, 103.0, 32.0)] 
constant=[A14] value=[(-100000.0, 2.0, 100000.0)] format=[float] label=[value] RectF=[(-131.18, 236.01, 152.0, 29.0)] 
constant=[A13] value=['a'] format=[str] label=[key] RectF=[(-39.87, 172.81, 33.0, 36.0)] 
constant=[A12] value=['dict'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(118.35000000000001, 316.87, 103.0, 32.0)] 
probe=[P6] label=[Value] format=[bool] RectF=[(542.69, 282.93, 70, 24)] 
probe=[P5] label=[Value] format=[bool] RectF=[(539.21, 52.03, 70, 24)] 
constant=[A11] value=['tuple'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(105.16, 87.71000000000001, 103.0, 32.0)] 
constant=[A10] value=[(0,)] format=[tuple] label=[const] RectF=[(116.95, -12.74, 47.0, 36.0)] 
cluster=[A7] value=[(-10000, [0, 0], 10000)] format=[list_int] label=[cluster] RectF=[(-854.19, 350.07, 219.0, 33.0)] 
cluster=[A5] value=[(-10000, 0, 10000)] format=[int] label=[cluster] RectF=[(-751.0500000000001, -21.35, 117.0, 33.0)] 
probe=[P1] label=[Value] format=[bool] RectF=[(-281.64, 36.37, 70, 24)] 
constant=[A1] value=['int'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(-720.73, 76.73, 103.0, 32.0)] 
cluster=[A2] value=[(-10000.0, 0.0, 10000.0)] format=[float] label=[cluster] RectF=[(-728.35, -214.43, 117.0, 33.0)] 
probe=[P0] label=[Value] format=[bool] RectF=[(-279.28000000000003, -153.32, 70, 24)] 
constant=[A0] value=['float'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(-718.37, -112.96000000000001, 103.0, 32.0)] 
constant=[A3] value=['list'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(-736.44, 436.58, 103.0, 32.0)] 
constant=[A4] value=['str'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(-725.14, 251.43, 103.0, 32.0)] 
probe=[P2] label=[Value] format=[bool] RectF=[(-286.05, 211.07, 70, 24)] 
probe=[P3] label=[Value] format=[bool] RectF=[(-297.35, 396.22, 70, 24)] 
cluster=[A6] value=['hello'] format=[str] label=[cluster] RectF=[(-733.85, 164.27, 117.0, 33.0)] 
constant=[A8] value=['list'] format=[enumerate(('int', 'float', 'list', 'complex', 'str', 'dict', 'tuple'))] label=[type_compare] RectF=[(119.33, -102.98, 103.0, 32.0)] 
probe=[P4] label=[Value] format=[bool] RectF=[(554.78, -139.70000000000002, 70, 24)] 
cluster=[A9] value=[(-10000, [[0, 0], [0, 0]], 10000)] format=[array_int] label=[cluster] RectF=[(-6.76, -208.42000000000002, 219.0, 61.0)] 
probe=[P7] label=[Value] format=[bool] RectF=[(553.79, 455.89, 70, 24)] 
script=[S0] title=[Script_python] inputs=[] outputs=[['out_set', 'out', 'str']] code=[your code] RectF=[(-48.0, 393.67, 263.0, 52.0)]
block=[U8] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N24)', 'Node(N25)'], ['out'], ['bool'])] RectF=[(298.88, 422.6, 159.98, 84.0)] 
block=[U6] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N20)', 'Node(N19)'], ['out'], ['bool'])] RectF=[(308.21, 249.63, 163.98, 88.0)] 
block=[U5] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N15)', 'Node(N17)'], ['out'], ['bool'])] RectF=[(288.63, 38.79, 161.98, 86.0)] 
block=[U1] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N7)', 'Node(N3)'], ['out'], ['bool'])] RectF=[(-515.08, 8.8, 157.98, 82.0)] 
block=[U0] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N0)', 'Node(N1)'], ['out'], ['bool'])] RectF=[(-500.90000000000003, -177.51, 155.98, 80.0)] 
block=[U2] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N11)', 'Node(N6)'], ['out'], ['bool'])] RectF=[(-530.79, 368.65000000000003, 159.98, 84.0)] 
block=[U3] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N10)', 'Node(N9)'], ['out'], ['bool'])] RectF=[(-519.49, 183.5, 157.98, 82.0)] 
block=[U4] category=[Tools.Boolean_operations] class=[isinstance_var] valInputs=[(['var', 'type_compare'], ['Node(N12)', 'Node(N14)'], ['out'], ['bool'])] RectF=[(324.38, -217.01, 161.98, 86.0)] 
block=[U7] category=[Tools.Dictionnary] class=[dict_new_value] valInputs=[(['key', 'value'], ['Node(N21)', 'Node(N22)'], ['out_dict'], ['dict'])] RectF=[(54.27, 176.72, 150.0, 80.0)] 
[source S0]
[]
out_set = {11, 22, 33, 44, 55}
['S0:out_set']
[/source S0]

[execution]
[]
['S0', 'U0', 'U1', 'U2', 'U3', 'U4', 'U5', 'U7', 'ThreadOn', 'U6', 'U8', 'ThreadOff', 'P0', 'P1', 'P2', 'P3', 'P4', 'P5', 'P6', 'P7']
{'U0': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], [0.0, 'float'], ['out'], ['bool'])"), 'U1': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], [0, 'int'], ['out'], ['bool'])"), 'U2': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], [[0, 0], 'list'], ['out'], ['bool'])"), 'U3': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], ['hello', 'str'], ['out'], ['bool'])"), 'U4': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], [[[0, 0], [0, 0]], 'list'], ['out'], ['bool'])"), 'U5': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], [(0,), 'tuple'], ['out'], ['bool'])"), 'U7': ('Tools.Dictionnary', 'dict_new_value', "(['key', 'value'], ['a', 2.0], ['out_dict'], ['dict'])"), 'U6': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], ['U7:out_dict', 'dict'], ['out'], ['bool'])"), 'U8': ('Tools.Boolean_operations', 'isinstance_var', "(['var', 'type_compare'], ['S0:out_set', 'set'], ['out'], ['bool'])"), 'P0': ('bool', 'Value', 'U0:out'), 'P1': ('bool', 'Value', 'U1:out'), 'P2': ('bool', 'Value', 'U3:out'), 'P3': ('bool', 'Value', 'U2:out'), 'P4': ('bool', 'Value', 'U4:out'), 'P5': ('bool', 'Value', 'U5:out'), 'P6': ('bool', 'Value', 'U6:out'), 'P7': ('bool', 'Value', 'U8:out')}
['U6:out', 'U5:out', 'U1:out', 'U0:out', 'U2:out', 'U3:out', 'U4:out', 'U7:out_dict', 'U8:out', 'S0:out_set']
{}
[]
[interlinks]
[]
